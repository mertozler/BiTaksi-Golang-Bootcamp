basePath: /
definitions:
  fiber.Map:
    additionalProperties: true
    type: object
  models.Location:
    properties:
      coordinates:
        items:
          type: number
        type: array
      type:
        type: string
    required:
    - type
    type: object
  models.RiderCreateAndUpdateRequest:
    properties:
      id:
        type: string
      location:
        $ref: '#/definitions/models.Location'
    required:
    - location
    type: object
  models.RiderRequest:
    properties:
      coordinates:
        items:
          type: number
        type: array
      id:
        type: string
      radius:
        type: number
      type:
        type: string
    required:
    - type
    type: object
  responses.DriverResponse:
    properties:
      data:
        $ref: '#/definitions/fiber.Map'
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:7000
info:
  contact:
    email: meozler@gmail.com
    name: Mert Ã–zler
    url: http://github.com/mertozler
  description: The API provides finding the nearest driver location with a given GeoJSON
    point and radius.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Driver Location API
  version: "1.0"
paths:
  /createDriver:
    post:
      consumes:
      - application/json
      description: An endpoint for creating a driver location. It would support batch
        operations to handle the bulk update.
      parameters:
      - description: Driver data
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/models.RiderCreateAndUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.DriverResponse'
      summary: Create a Driver Location
      tags:
      - Driver-Create
  /findDriver:
    post:
      consumes:
      - application/json
      description: The endpoint that allows searching with a GeoJSON point to find
        a driver if it matches the given criteria. Otherwise, the service should respond
        with a 404 - Not Found
      parameters:
      - description: 'Apikey header: (You need to add Bearer to the beginning of the
          jwt key. For example: Bearer apiKey)'
        in: header
        name: Apikey
        required: true
        type: string
      - description: Rider data
        in: body
        name: rider
        required: true
        schema:
          $ref: '#/definitions/models.RiderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.DriverResponse'
      summary: Find The Driver
      tags:
      - Driver-Find
  /getAllDriversLocation:
    get:
      consumes:
      - application/json
      description: Returns the current location of all drives.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.DriverResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.DriverResponse'
      summary: Get All Driver Location
      tags:
      - Drivers-Location-Get-All
swagger: "2.0"
